Концепция игры

За основу взята известная настольная игра "Splendor", но с упрощёнными правилами (отсутствуют вельможи, убрана механика залогов, игра ведётся только между двумя игроками).

Суть: игроки ходят по очереди, за один ход можно
* взять камни из банка (либо три камня различного цвета; либо два камня одного цвета, но при условии, что в банке останется ещё два камня того же цвета);
* купить карту (стоимость карты указана в камнях на ней самой; цвет карты определяет скидку при следующей покупке, например, если взять зелёную карту, то при следующей покупке можно не вносить в банк один зелёный камень; также на карте указаны очки, которые получает игрок).

Игра заканчивается, как только один из игроков набирает 15 очков и выше, он объявляется победителем, второй игрок - проигравшим.

Примечания: колоды разделены на три группы. Первая - самые дешёвые карты, большинство среди них дают +0 очков, нужны для зарабатывания хорошей скидки. Вторая - карты средней стоимости, количество очков на них варьируется от +1 до +3. Третья группа - самые дорогие и самые жирные в плане очков карты. В моей реализации игры для двух игроков дело до покупки карт из второй колоды доходит редко.


Архитектура

Используется паттерн MVC. Описание классов и основной логики игры (Model) содержится в файле baseclasses.py. В нём импортированы только модули 'random' для генерации раскладки карт и 'json' для чтения карт из "базы данных", поэтому эта часть кода никак не зависит от какого-либо GUI-фреймворка и может быть подключена к любой библиотеке. Реализация MVC преимущественно зашита в файле `client.py`: Controller отслеживает действия пользователя (различается два вида действий - нажатие кнопки "Quit", то есть закрытие игры, и клик мышкой), классифицирует их, переводит на язык запросов и отправляет в Model для изменения состояния игры; Model сверяет ещё раз действие с правилами и меняет состояние игры, затем отправляет обновлённое состояние в View; View по состоянию игры (у кого какие карты и камни) отрисовывает графику. Также есть серверная часть, которая была украдена на просторах интернета и отвечает за сетевую составляющую игры (по сути, это просто переделанный чатик на протоколе TCP).
